name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      env:
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet
        DOTNET_HOST_PATH: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet\dotnet.exe
      run: |
        dotnet build --no-restore -p:Platform="Any CPU" -p:Configuration="Release"

    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Run SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet
        DOTNET_HOST_PATH: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet\dotnet.exe
      run: |
        dotnet sonarscanner begin /k:"TonyYourFriend_sonarqubetest_d5ca3011-0da9-4380-b605-ea742cd704cc" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        dotnet build -p:Platform="Any CPU" -p:Configuration="Release"
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Publish Quality Gate Result
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet
        DOTNET_HOST_PATH: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet\dotnet.exe
      run: |
        dotnet sonarscanner begin /k:"TonyYourFriend_sonarqubetest_d5ca3011-0da9-4380-b605-ea742cd704cc" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.qualitygate.wait=true
        dotnet build -p:Platform="Any CPU" -p:Configuration="Release"
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
